{"version":3,"sources":["downicon.js","Home.js","navigation.js","Aboutpart.js","card.js","App.js","serviceWorker.js","index.js"],"names":["Down","src","data","icon","down","Home","state","backgroundColor","changeColer","setState","name","className","style","this","onClick","title","subtitle","Object","keys","icons","map","key","url","activeClass","to","spy","smooth","offset","duration","delay","Component","Nav","href","About","sections","items","content","Cards","skill","Content","image","alt","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a2c4e6ac.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport data from \"./data.json\";\r\nimport \"./App.css\";\r\n\r\nconst Down = () => <img src={data.icon.down} />;\r\n\r\nexport default Down;\r\n","import React, { Component } from \"react\";\r\nimport { SocialIcon } from \"react-social-icons\";\r\nimport {\r\n  Link,\r\n  Element,\r\n  Events,\r\n  animateScroll as scroll,\r\n  scrollSpy,\r\n  scroller,\r\n} from \"react-scroll\";\r\nimport data from \"./data.json\";\r\nimport Down from \"./downicon\";\r\nimport Nav from \"./navigation\";\r\nimport SnowStorm from \"react-snowstorm\";\r\n\r\nimport \"./App.css\";\r\n\r\nclass Home extends Component {\r\n  state = {\r\n    backgroundColor: \"rgb(211, 210, 210)\",\r\n  };\r\n\r\n  changeColer = () => {\r\n    this.setState({\r\n      backgroundColor: \"khaki\",\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Element name=\"Home\" className=\"element\" />\r\n        <div\r\n          className=\"Home\"\r\n          style={{\r\n            backgroundColor: this.state.backgroundColor,\r\n          }}\r\n        >\r\n          <div className=\"Home_titles\">\r\n            <h1\r\n              onClick={() => {\r\n                this.changeColer();\r\n              }}\r\n            >\r\n              Hello {data.title}\r\n            </h1>\r\n          </div>\r\n          <div className=\"Home_subtitles\">\r\n            <h3>{data.subtitle}</h3>\r\n          </div>\r\n\r\n          <div className=\"Home_icons\">\r\n            {Object.keys(data.icons).map((key) => {\r\n              return (\r\n                <SocialIcon className=\"Home_per_icons\" url={data.icons[key]} />\r\n              );\r\n            })}\r\n          </div>\r\n          <Link\r\n            activeClass=\"active\"\r\n            to=\"down\"\r\n            spy={true}\r\n            smooth={true}\r\n            offset={0}\r\n            duration={800}\r\n            delay={0}\r\n          >\r\n            <a className=\"down\">\r\n              <Down />\r\n            </a>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Link,\r\n  Element,\r\n  Events,\r\n  animateScroll as scroll,\r\n  scrollSpy,\r\n  scroller,\r\n} from \"react-scroll\";\r\nimport Home from \"./Home\";\r\n\r\nimport \"./App.css\";\r\n\r\nclass Nav extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ul className=\"nav\">\r\n          <Link\r\n            activeClass=\"active\"\r\n            to=\"Home\"\r\n            spy={true}\r\n            smooth={true}\r\n            offset={0}\r\n            duration={800}\r\n            delay={0}\r\n          >\r\n            <li className=\"nav_list\">\r\n              <a href=\"\" className=\"nav_link\">\r\n                Home\r\n              </a>\r\n            </li>\r\n          </Link>\r\n\r\n          <Link\r\n            activeClass=\"active\"\r\n            to=\"down\"\r\n            spy={true}\r\n            smooth={true}\r\n            offset={0}\r\n            duration={800}\r\n            delay={0}\r\n          >\r\n            <li className=\"nav_list\">\r\n              <a href=\"\" className=\"nav_link\">\r\n                About\r\n              </a>\r\n            </li>\r\n          </Link>\r\n\r\n          <Link\r\n            activeClass=\"active\"\r\n            to=\"down_About\"\r\n            spy={true}\r\n            smooth={true}\r\n            offset={0}\r\n            duration={800}\r\n            delay={0}\r\n          >\r\n            <li className=\"nav_list\">\r\n              <a href=\"\" className=\"nav_link\">\r\n                Skills\r\n              </a>\r\n            </li>\r\n          </Link>\r\n\r\n          <li\r\n            className=\"nav_list\"\r\n            onClick={() => {\r\n              Home.this.changeColer();\r\n            }}\r\n          >\r\n            <a href=\"\" className=\"nav_link\">\r\n              Change Coler\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Nav;\r\n","import React, { Component } from \"react\";\r\nimport data from \"./data.json\";\r\nimport {\r\n  Link,\r\n  Element,\r\n  Events,\r\n  animateScroll as scroll,\r\n  scrollSpy,\r\n  scroller,\r\n} from \"react-scroll\";\r\nimport Down from \"./downicon\";\r\n\r\nimport \"./App.css\";\r\n\r\nclass About extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"About\">\r\n        <Element name=\"down\" className=\"element\" />\r\n\r\n        <div className=\"About_TXT\">\r\n          <h3 className=\"About_title\">{data.sections[0].title}</h3>\r\n          <div className=\"About_content\">\r\n            {data.sections[0].items[0].content}\r\n          </div>\r\n\r\n          <Link\r\n            activeClass=\"active\"\r\n            to=\"down_About\"\r\n            spy={true}\r\n            smooth={true}\r\n            offset={0}\r\n            duration={800}\r\n            delay={0}\r\n          >\r\n            <a className=\"down_About\" href=\"\">\r\n              <Down />\r\n            </a>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default About;\r\n","import React, { Component } from \"react\";\r\nimport data from \"./data.json\";\r\nimport {\r\n  Link,\r\n  Element,\r\n  Events,\r\n  animateScroll as scroll,\r\n  scrollSpy,\r\n  scroller,\r\n} from \"react-scroll\";\r\nimport \"./App.css\";\r\n\r\nclass Cards extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"cards\">\r\n        <Element name=\"down_About\" className=\"element\" />\r\n        <h2 className=\"cards_subject\">{data.sections[1].title}</h2>\r\n        <div className=\"Cards_wrapper\">\r\n          {data.sections[1].items.map((skill) => {\r\n            return (\r\n              <div>\r\n                <div className=\"Cards_box\">\r\n                  <img\r\n                    className=\"Cards_icons\"\r\n                    src={skill.Content.image}\r\n                    alt=\"\"\r\n                  />\r\n                  <h3 className=\"Cards_titles\">{skill.Content.title}</h3>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Cards;\r\n","import React, { Component } from \"react\";\nimport {\n  Link,\n  Element,\n  Events,\n  animateScroll as scroll,\n  scrollSpy,\n  scroller,\n} from \"react-scroll\";\nimport data from \"./data.json\";\nimport Nav from \"./navigation\";\nimport Home from \"./Home\";\nimport About from \"./Aboutpart\";\nimport Cards from \"./card\";\nimport Down from \"./downicon\";\nimport SnowStorm from \"react-snowstorm\";\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Nav />\n        <Element name=\"down\" className=\"element\" />\n        <Home />\n        <About />\n        <Cards />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}